{"ast":null,"code":"var _jsxFileName = \"D:\\\\Abhi\\\\My Project\\\\PHP\\\\Basic_Banking_System\\\\frontend\\\\src\\\\components\\\\ModalView.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport axios from 'axios';\nimport config from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ModalView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSender = event => {\n      this.setState({\n        sender_id: event.target.value\n      });\n      console.log(this.state.sender_id);\n      axios.get(`${config.apiUrl}/select_cust.php?cust_id=${this.state.sender_id}`).then(res => {\n        this.setState({\n          receiver_data: res.data\n        });\n        console.log(this.state.receiver_data);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.handleReceiver = event => {\n      this.setState({\n        sender_id: event.target.value\n      });\n    };\n\n    this.handleAmount = event => {\n      this.setState({\n        amount: event.target.value\n      });\n    };\n\n    this.state = {\n      sender_data: [],\n      receiver_data: [],\n      sender_id: \"\",\n      receiver_id: \"\",\n      amount: \"\",\n      success: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${config.apiUrl}/get_cust_data.php`).then(res => {\n      this.setState({\n        sender_data: res.data\n      });\n      console.log(this.state.sender_data);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const isShow = this.props.show;\n    const isHide = this.props.hideClose;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: isShow,\n        onHide: isHide,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Transfer Money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Sender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                name: \"sender\",\n                onChange: this.handleSender.bind(this),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"--Select Sender--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this), this.state.sender_data.map(sd => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: sd.cust_id,\n                    children: sd.cust_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 28\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Receiver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                name: \"receiver\",\n                onChange: this.handleReceiver.bind(this),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"--Select Receiver--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this), this.state.receiver_data.map(rd => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: rd.cust_id,\n                    children: rd.cust_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 28\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"amount\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Transfer Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"amount\",\n                placeholder: \"Enter Amount\",\n                className: \"form-control\",\n                onChange: this.handleAmount.bind(this),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), this.state.success ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"success\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Transaction Successfull.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Transaction details recorded successfully. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: !this.state.success ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: isHide,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              onClick: this.transferMoney,\n              children: \"Tranfer Money\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: this.handleReload,\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default ModalView;","map":{"version":3,"sources":["D:/Abhi/My Project/PHP/Basic_Banking_System/frontend/src/components/ModalView.js"],"names":["React","Component","Modal","Button","Form","Alert","axios","config","ModalView","constructor","props","handleSender","event","setState","sender_id","target","value","console","log","state","get","apiUrl","then","res","receiver_data","data","error","handleReceiver","handleAmount","amount","sender_data","receiver_id","success","componentDidMount","render","isShow","show","isHide","hideClose","bind","map","sd","cust_id","cust_name","rd","transferMoney","handleReload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,KAA9B,QAA2C,iBAA3C;AACA,OAAO,kCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA,OAAO,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AACvCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,YAvBmB,GAuBHC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADZ,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWL,SAAvB;AACAR,MAAAA,KAAK,CACFc,GADH,CACQ,GAAEb,MAAM,CAACc,MAAO,4BAA2B,KAAKF,KAAL,CAAWL,SAAU,EADxE,EAEGQ,IAFH,CAGKC,GAAD,IAAS;AACP,aAAKV,QAAL,CAAc;AAAEW,UAAAA,aAAa,EAAED,GAAG,CAACE;AAArB,SAAd;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWK,aAAvB;AACD,OANL,EAOKE,KAAD,IAAW;AACTT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,OATL;AAWD,KAvCkB;;AAAA,SAwCnBC,cAxCmB,GAwCDf,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADZ,OAAd;AAGD,KA5CkB;;AAAA,SA6CnBY,YA7CmB,GA6CHhB,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AACZgB,QAAAA,MAAM,EAAEjB,KAAK,CAACG,MAAN,CAAaC;AADT,OAAd;AAGD,KAjDkB;;AAGjB,SAAKG,KAAL,GAAa;AACXW,MAAAA,WAAW,EAAE,EADF;AAEXN,MAAAA,aAAa,EAAE,EAFJ;AAGXV,MAAAA,SAAS,EAAE,EAHA;AAIXiB,MAAAA,WAAW,EAAE,EAJF;AAKXF,MAAAA,MAAM,EAAE,EALG;AAMXG,MAAAA,OAAO,EAAE;AANE,KAAb;AAQD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB3B,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAEb,MAAM,CAACc,MAAO,oBAA3B,EAAgDC,IAAhD,CACGC,GAAD,IAAS;AACP,WAAKV,QAAL,CAAc;AAAEiB,QAAAA,WAAW,EAAEP,GAAG,CAACE;AAAnB,OAAd;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWW,WAAvB;AACD,KAJH,EAKGJ,KAAD,IAAW;AACTT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,KAPH;AASD;;AA4BDQ,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKzB,KAAL,CAAW0B,IAA1B;AACA,UAAMC,MAAM,GAAG,KAAK3B,KAAL,CAAW4B,SAA1B;AACA,wBACE;AAAA,6BAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEH,MAAb;AAAqB,QAAA,MAAM,EAAEE,MAA7B;AAAA,gCACE,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,kCACE,QAAC,IAAD;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,EAAE,EAAC,QADL;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,QAAQ,EAAE,KAAK1B,YAAL,CAAkB4B,IAAlB,CAAuB,IAAvB,CAHZ;AAAA,wCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAMG,KAAKpB,KAAL,CAAWW,WAAX,CAAuBU,GAAvB,CAA4BC,EAAD,IAAQ;AAClC,sCAAO;AAAQ,oBAAA,KAAK,EAAEA,EAAE,CAACC,OAAlB;AAAA,8BAA4BD,EAAE,CAACE;AAA/B;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD,iBAFA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAeE,QAAC,IAAD,CAAM,KAAN;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,EAAE,EAAC,QADL;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,QAAQ,EAAE,KAAKhB,cAAL,CAAoBY,IAApB,CAAyB,IAAzB,CAHZ;AAAA,wCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAMG,KAAKpB,KAAL,CAAWK,aAAX,CAAyBgB,GAAzB,CAA8BI,EAAD,IAAQ;AACpC,sCAAO;AAAQ,oBAAA,KAAK,EAAEA,EAAE,CAACF,OAAlB;AAAA,8BAA4BE,EAAE,CAACD;AAA/B;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD,iBAFA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF,eA4BE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,QAAtB;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,WAAW,EAAC,cAHd;AAIE,gBAAA,SAAS,EAAC,cAJZ;AAKE,gBAAA,QAAQ,EAAE,KAAKf,YAAL,CAAkBW,IAAlB,CAAuB,IAAvB,CALZ;AAME,gBAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAyCG,KAAKpB,KAAL,CAAWa,OAAX,gBACC;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,SAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,2BADD,GAOG,IAhDN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAsDE,QAAC,KAAD,CAAO,MAAP;AAAA,oBACG,CAAC,KAAKb,KAAL,CAAWa,OAAZ,gBACC;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,QAAhB;AAAyB,cAAA,OAAO,EAAEK,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,OAAO,EAAE,KAAKQ,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA,0BADD,gBAUC,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAE,KAAKC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,gBAtDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AA4ED;;AAlIsC;AAqIzC,eAAetC,SAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap'\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport axios from 'axios';\r\nimport config from \"../config\"\r\n\r\nexport class ModalView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sender_data: [],\r\n      receiver_data: [],\r\n      sender_id: \"\",\r\n      receiver_id: \"\",\r\n      amount: \"\",\r\n      success: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios.get(`${config.apiUrl}/get_cust_data.php`).then(\r\n      (res) => {\r\n        this.setState({ sender_data: res.data });\r\n        console.log(this.state.sender_data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  handleSender = (event) => {\r\n    this.setState({\r\n      sender_id: event.target.value,\r\n    });\r\n    console.log(this.state.sender_id);\r\n    axios\r\n      .get(`${config.apiUrl}/select_cust.php?cust_id=${this.state.sender_id}`)\r\n      .then(\r\n        (res) => {\r\n          this.setState({ receiver_data: res.data });\r\n          console.log(this.state.receiver_data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  handleReceiver = (event) => {\r\n    this.setState({\r\n      sender_id: event.target.value,\r\n    });\r\n  };\r\n  handleAmount = (event) => {\r\n    this.setState({\r\n      amount: event.target.value\r\n    })\r\n  }\r\n  render() {\r\n    const isShow = this.props.show;\r\n    const isHide = this.props.hideClose;\r\n    return (\r\n      <div>\r\n        {/* Modal Code */}\r\n        <Modal show={isShow} onHide={isHide}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Transfer Money</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label>Sender</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"sender\"\r\n                  onChange={this.handleSender.bind(this)}\r\n                >\r\n                  <option>--Select Sender--</option>\r\n                  {this.state.sender_data.map((sd) => {\r\n                    return <option value={sd.cust_id}>{sd.cust_name}</option>;\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>Receiver</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"receiver\"\r\n                  onChange={this.handleReceiver.bind(this)}\r\n                >\r\n                  <option>--Select Receiver--</option>\r\n                  {this.state.receiver_data.map((rd) => {\r\n                    return <option value={rd.cust_id}>{rd.cust_name}</option>;\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"amount\">\r\n                <Form.Label>Transfer Amount</Form.Label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"amount\"\r\n                  placeholder=\"Enter Amount\"\r\n                  className=\"form-control\"\r\n                  onChange={this.handleAmount.bind(this)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            {this.state.success ? (\r\n              <>\r\n                <Alert variant=\"success\">\r\n                  <p>Transaction Successfull.</p>\r\n                  <p>Transaction details recorded successfully. </p>\r\n                </Alert>\r\n              </>\r\n            ) : null}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {!this.state.success ? (\r\n              <>\r\n                <Button variant=\"danger\" onClick={isHide}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"warning\" onClick={this.transferMoney}>\r\n                  Tranfer Money\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button variant=\"warning\" onClick={this.handleReload}>\r\n                OK\r\n              </Button>\r\n            )}\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalView;\r\n"]},"metadata":{},"sourceType":"module"}