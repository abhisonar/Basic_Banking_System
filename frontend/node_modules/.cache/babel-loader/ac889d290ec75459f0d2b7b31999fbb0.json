{"ast":null,"code":"var _jsxFileName = \"D:\\\\Abhi\\\\My Project\\\\PHP\\\\Basic_Banking_System\\\\frontend\\\\src\\\\components\\\\ModalView.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport axios from 'axios';\nimport config from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ModalView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sender_data: [],\n      receiver_data: [],\n      sender_id: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${config.apiUrl}/get_cust_data.php`).then(res => {\n      this.setState({\n        sender_data: res.data\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const isShow = this.props.show;\n    const isHide = this.props.hideClose;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: isShow,\n        onHide: isHide,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Transfer Money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Sender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                name: \"sender\",\n                disabled: true,\n                children: [this.state.sender_data.map(sender => {}), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: this.state.sender_data.cust_id,\n                  children: this.state.sender_data.cust_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Receiver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                name: \"receiver\",\n                onChange: this.handleReceiver.bind(this),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: true,\n                  children: \"--Select Receiver--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this), this.state.receiver_data.map(rd => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: rd.cust_id,\n                    children: rd.cust_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"amount\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Transfer Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"amount\",\n                placeholder: \"Enter Amount\",\n                className: \"form-control\",\n                onChange: this.handleAmount.bind(this),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), this.state.success ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"success\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Transaction Successfull.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Transaction details recorded successfully. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this)\n          }, void 0, false) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: !this.state.success ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: this.handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              onClick: this.transferMoney,\n              children: \"Tranfer Money\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: this.handleReload,\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this);\n  }\n\n}\nexport default ModalView;","map":{"version":3,"sources":["D:/Abhi/My Project/PHP/Basic_Banking_System/frontend/src/components/ModalView.js"],"names":["React","Component","Modal","Button","Form","Alert","axios","config","ModalView","constructor","props","state","sender_data","receiver_data","sender_id","componentDidMount","get","apiUrl","then","res","setState","data","error","console","log","render","isShow","show","isHide","hideClose","map","sender","cust_id","cust_name","handleReceiver","bind","rd","handleAmount","success","handleClose","transferMoney","handleReload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap'\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport axios from 'axios';\r\nimport config from \"../config\"\r\n\r\nexport class ModalView extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      sender_data: [],\r\n      receiver_data: [],\r\n      sender_id: \"\"\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${config.apiUrl}/get_cust_data.php`)\r\n      .then(\r\n        (res) => {\r\n          this.setState({ sender_data: res.data });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    const isShow = this.props.show\r\n    const isHide = this.props.hideClose\r\n        return (\r\n          <div>\r\n            {/* Modal Code */}\r\n            <Modal show={isShow} onHide={isHide}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Transfer Money</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Form.Label>Sender</Form.Label>\r\n                    <Form.Control as=\"select\" name=\"sender\" disabled>\r\n                      {this.state.sender_data.map((sender) => {\r\n                        \r\n                      })\r\n\r\n                      }\r\n                      <option value={this.state.sender_data.cust_id}>\r\n                        {this.state.sender_data.cust_name}\r\n                      </option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Form.Label>Receiver</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      name=\"receiver\"\r\n                      onChange={this.handleReceiver.bind(this)}\r\n                    >\r\n                      <option value>--Select Receiver--</option>\r\n                      {this.state.receiver_data.map((rd) => {\r\n                        return (\r\n                          <option value={rd.cust_id}>{rd.cust_name}</option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"amount\">\r\n                    <Form.Label>Transfer Amount</Form.Label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"amount\"\r\n                      placeholder=\"Enter Amount\"\r\n                      className=\"form-control\"\r\n                      onChange={this.handleAmount.bind(this)}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n                {this.state.success ? (\r\n                  <>\r\n                    <Alert variant=\"success\">\r\n                      <p>Transaction Successfull.</p>\r\n                      <p>Transaction details recorded successfully. </p>\r\n                    </Alert>\r\n                  </>\r\n                ) : null}\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                {!this.state.success ? (\r\n                  <>\r\n                    <Button variant=\"danger\" onClick={this.handleClose}>\r\n                      Close\r\n                    </Button>\r\n                    <Button variant=\"warning\" onClick={this.transferMoney}>\r\n                      Tranfer Money\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button variant=\"warning\" onClick={this.handleReload}>\r\n                    OK\r\n                  </Button>\r\n                )}\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModalView;\r\n"]},"metadata":{},"sourceType":"module"}