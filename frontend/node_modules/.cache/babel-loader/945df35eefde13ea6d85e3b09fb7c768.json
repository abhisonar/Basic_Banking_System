{"ast":null,"code":"var _jsxFileName = \"D:\\\\Abhi\\\\My Project\\\\PHP\\\\Basic_Banking_System\\\\frontend\\\\src\\\\components\\\\ModalView.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport axios from 'axios';\nimport config from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ModalView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSender = event => {\n      this.setState(prevState => ({\n        transaction: { ...prevState.transaction,\n          sender: event.target.value\n        }\n      }));\n      axios.get(`${config.apiUrl}/select_cust.php?cust_id=${event.target.value}`).then(res => {\n        this.setState({\n          receiver_data: res.data\n        }); // console.log(this.state.receiver_data);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.handleReceiver = event => {\n      this.setState(prevState => ({\n        transaction: { ...prevState.transaction,\n          receiver: event.target.value\n        }\n      }));\n    };\n\n    this.handleAmount = event => {\n      this.setState(prevState => ({\n        transaction: { ...prevState.transaction,\n          amount: event.target.value\n        }\n      }));\n    };\n\n    this.handleReload = () => {\n      this.setState({\n        isShow: false\n      });\n      window.location.reload();\n    };\n\n    this.transferMoney = e => {\n      e.preventDefault();\n      axios({\n        method: \"post\",\n        url: `${config.apiUrl}/transferMoney.php`,\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        data: this.state.transaction\n      }).then(out => {\n        this.setState({\n          success: out.data\n        });\n      }).catch(er => {\n        this.setState({\n          error: er.message\n        });\n      });\n    };\n\n    this.state = {\n      sender_data: [],\n      receiver_data: [],\n      transaction: {\n        sender: \"\",\n        receiver: \"\",\n        amount: \"\"\n      },\n      success: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      sender_data: props.sender_data\n    };\n  }\n\n  render() {\n    const isShow = this.props.show;\n    const isHide = this.props.hideClose;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: isShow,\n        onHide: isHide,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Transfer Money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Sender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                name: \"sender\",\n                onChange: this.handleSender.bind(this),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"--Select Sender--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this), this.state.sender_data.map(sd => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: sd.cust_id,\n                    children: sd.cust_name\n                  }, sd.cust_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Receiver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                name: \"receiver\",\n                onChange: this.handleReceiver.bind(this),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"--Select Receiver--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this), this.state.receiver_data.map(rd => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: rd.cust_id,\n                    children: rd.cust_name\n                  }, rd.cust_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"amount\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Transfer Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"amount\",\n                placeholder: \"Enter Amount\",\n                className: \"form-control\",\n                onChange: this.handleAmount.bind(this),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), this.state.success ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"success\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Transaction Successfull.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Transaction details recorded successfully. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: !this.state.success ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: isHide,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              onClick: this.transferMoney,\n              children: \"Tranfer Money\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: this.handleReload,\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default ModalView;","map":{"version":3,"sources":["D:/Abhi/My Project/PHP/Basic_Banking_System/frontend/src/components/ModalView.js"],"names":["React","Component","Modal","Button","Form","Alert","axios","config","ModalView","constructor","props","handleSender","event","setState","prevState","transaction","sender","target","value","get","apiUrl","then","res","receiver_data","data","error","console","log","handleReceiver","receiver","handleAmount","amount","handleReload","isShow","window","location","reload","transferMoney","e","preventDefault","method","url","headers","state","out","success","catch","er","message","sender_data","getDerivedStateFromProps","render","show","isHide","hideClose","bind","map","sd","cust_id","cust_name","rd"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,KAA9B,QAA2C,iBAA3C;AACA,OAAO,kCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA,OAAO,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AACvCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,YAnBmB,GAmBHC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BC,QAAAA,WAAW,EAAE,EACX,GAAGD,SAAS,CAACC,WADF;AAEXC,UAAAA,MAAM,EAAEJ,KAAK,CAACK,MAAN,CAAaC;AAFV;AADe,OAAhB,CAAd;AAMAZ,MAAAA,KAAK,CACFa,GADH,CACQ,GAAEZ,MAAM,CAACa,MAAO,4BAA2BR,KAAK,CAACK,MAAN,CAAaC,KAAM,EADtE,EAEGG,IAFH,CAGKC,GAAD,IAAS;AACP,aAAKT,QAAL,CAAc;AAAEU,UAAAA,aAAa,EAAED,GAAG,CAACE;AAArB,SAAd,EADO,CAEP;AACD,OANL,EAOKC,KAAD,IAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OATL;AAWD,KArCkB;;AAAA,SAsCnBG,cAtCmB,GAsCDhB,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BC,QAAAA,WAAW,EAAE,EACX,GAAGD,SAAS,CAACC,WADF;AAEXc,UAAAA,QAAQ,EAAEjB,KAAK,CAACK,MAAN,CAAaC;AAFZ;AADe,OAAhB,CAAd;AAMD,KA7CkB;;AAAA,SA8CnBY,YA9CmB,GA8CHlB,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BC,QAAAA,WAAW,EAAE,EACX,GAAGD,SAAS,CAACC,WADF;AAEXgB,UAAAA,MAAM,EAAEnB,KAAK,CAACK,MAAN,CAAaC;AAFV;AADe,OAAhB,CAAd;AAMD,KArDkB;;AAAA,SAsDnBc,YAtDmB,GAsDJ,MAAM;AACnB,WAAKnB,QAAL,CAAc;AAAEoB,QAAAA,MAAM,EAAE;AAAV,OAAd;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAzDkB;;AAAA,SA0DnBC,aA1DmB,GA0DFC,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACAjC,MAAAA,KAAK,CAAC;AACJkC,QAAAA,MAAM,EAAE,MADJ;AAEJC,QAAAA,GAAG,EAAG,GAAElC,MAAM,CAACa,MAAO,oBAFlB;AAGJsB,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAHL;AAIJlB,QAAAA,IAAI,EAAE,KAAKmB,KAAL,CAAW5B;AAJb,OAAD,CAAL,CAMGM,IANH,CAMSuB,GAAD,IAAS;AACb,aAAK/B,QAAL,CAAc;AAAEgC,UAAAA,OAAO,EAAED,GAAG,CAACpB;AAAf,SAAd;AACD,OARH,EASGsB,KATH,CASUC,EAAD,IAAQ;AACb,aAAKlC,QAAL,CAAc;AAAEY,UAAAA,KAAK,EAAEsB,EAAE,CAACC;AAAZ,SAAd;AACD,OAXH;AAYD,KAxEkB;;AAGjB,SAAKL,KAAL,GAAa;AACXM,MAAAA,WAAW,EAAE,EADF;AAEX1B,MAAAA,aAAa,EAAE,EAFJ;AAGXR,MAAAA,WAAW,EAAE;AACXC,QAAAA,MAAM,EAAE,EADG;AAEXa,QAAAA,QAAQ,EAAE,EAFC;AAGXE,QAAAA,MAAM,EAAE;AAHG,OAHF;AAQXc,MAAAA,OAAO,EAAE;AARE,KAAb;AAUD;;AAE8B,SAAxBK,wBAAwB,CAACxC,KAAD,EAAQiC,KAAR,EAAe;AAC5C,WAAO;AAAEM,MAAAA,WAAW,EAAEvC,KAAK,CAACuC;AAArB,KAAP;AACD;;AAwDDE,EAAAA,MAAM,GAAG;AACP,UAAMlB,MAAM,GAAG,KAAKvB,KAAL,CAAW0C,IAA1B;AACA,UAAMC,MAAM,GAAG,KAAK3C,KAAL,CAAW4C,SAA1B;AACA,wBACE;AAAA,6BAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAErB,MAAb;AAAqB,QAAA,MAAM,EAAEoB,MAA7B;AAAA,gCACE,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,kCACE,QAAC,IAAD;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,EAAE,EAAC,QADL;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,QAAQ,EAAE,KAAK1C,YAAL,CAAkB4C,IAAlB,CAAuB,IAAvB,CAHZ;AAAA,wCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAMG,KAAKZ,KAAL,CAAWM,WAAX,CAAuBO,GAAvB,CAA4BC,EAAD,IAAQ;AAClC,sCACE;AAAyB,oBAAA,KAAK,EAAEA,EAAE,CAACC,OAAnC;AAAA,8BACGD,EAAE,CAACE;AADN,qBAAaF,EAAE,CAACC,OAAhB;AAAA;AAAA;AAAA;AAAA,0BADF;AAKD,iBANA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAmBE,QAAC,IAAD,CAAM,KAAN;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,EAAE,EAAC,QADL;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,QAAQ,EAAE,KAAK9B,cAAL,CAAoB2B,IAApB,CAAyB,IAAzB,CAHZ;AAAA,wCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAMG,KAAKZ,KAAL,CAAWpB,aAAX,CAAyBiC,GAAzB,CAA8BI,EAAD,IAAQ;AACpC,sCACE;AAAyB,oBAAA,KAAK,EAAEA,EAAE,CAACF,OAAnC;AAAA,8BACGE,EAAE,CAACD;AADN,qBAAaC,EAAE,CAACF,OAAhB;AAAA;AAAA;AAAA;AAAA,0BADF;AAKD,iBANA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBF,eAoCE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,QAAtB;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,WAAW,EAAC,cAHd;AAIE,gBAAA,SAAS,EAAC,cAJZ;AAKE,gBAAA,QAAQ,EAAE,KAAK5B,YAAL,CAAkByB,IAAlB,CAAuB,IAAvB,CALZ;AAME,gBAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBApCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAiDG,KAAKZ,KAAL,CAAWE,OAAX,gBACC;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,SAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,2BADD,GAOG,IAxDN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eA8DE,QAAC,KAAD,CAAO,MAAP;AAAA,oBACG,CAAC,KAAKF,KAAL,CAAWE,OAAZ,gBACC;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,QAAhB;AAAyB,cAAA,OAAO,EAAEQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,OAAO,EAAE,KAAKhB,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA,0BADD,gBAUC,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAE,KAAKL,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,gBA9DF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAoFD;;AAjKsC;AAoKzC,eAAexB,SAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap'\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport axios from 'axios';\r\nimport config from \"../config\"\r\n\r\nexport class ModalView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sender_data: [],\r\n      receiver_data: [],\r\n      transaction: {\r\n        sender: \"\",\r\n        receiver: \"\",\r\n        amount: \"\",\r\n      },\r\n      success: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return { sender_data: props.sender_data };\r\n  }\r\n\r\n  handleSender = (event) => {\r\n    this.setState((prevState) => ({\r\n      transaction: {\r\n        ...prevState.transaction,\r\n        sender: event.target.value,\r\n      },\r\n    }));\r\n    axios\r\n      .get(`${config.apiUrl}/select_cust.php?cust_id=${event.target.value}`)\r\n      .then(\r\n        (res) => {\r\n          this.setState({ receiver_data: res.data });\r\n          // console.log(this.state.receiver_data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  handleReceiver = (event) => {\r\n    this.setState((prevState) => ({\r\n      transaction: {\r\n        ...prevState.transaction,\r\n        receiver: event.target.value,\r\n      },\r\n    }));\r\n  };\r\n  handleAmount = (event) => {\r\n    this.setState((prevState) => ({\r\n      transaction: {\r\n        ...prevState.transaction,\r\n        amount: event.target.value,\r\n      },\r\n    }));\r\n  };\r\n  handleReload = () => {\r\n    this.setState({ isShow: false });\r\n    window.location.reload();\r\n  };\r\n  transferMoney = (e) => {\r\n    e.preventDefault();\r\n    axios({\r\n      method: \"post\",\r\n      url: `${config.apiUrl}/transferMoney.php`,\r\n      headers: { \"content-type\": \"application/json\" },\r\n      data: this.state.transaction,\r\n    })\r\n      .then((out) => {\r\n        this.setState({ success: out.data });\r\n      })\r\n      .catch((er) => {\r\n        this.setState({ error: er.message });\r\n      });\r\n  };\r\n  render() {\r\n    const isShow = this.props.show;\r\n    const isHide = this.props.hideClose;\r\n    return (\r\n      <div>\r\n        {/* Modal Code */}\r\n        <Modal show={isShow} onHide={isHide}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Transfer Money</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label>Sender</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"sender\"\r\n                  onChange={this.handleSender.bind(this)}\r\n                >\r\n                  <option>--Select Sender--</option>\r\n                  {this.state.sender_data.map((sd) => {\r\n                    return (\r\n                      <option key={sd.cust_id} value={sd.cust_id}>\r\n                        {sd.cust_name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>Receiver</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"receiver\"\r\n                  onChange={this.handleReceiver.bind(this)}\r\n                >\r\n                  <option>--Select Receiver--</option>\r\n                  {this.state.receiver_data.map((rd) => {\r\n                    return (\r\n                      <option key={rd.cust_id} value={rd.cust_id}>\r\n                        {rd.cust_name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"amount\">\r\n                <Form.Label>Transfer Amount</Form.Label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"amount\"\r\n                  placeholder=\"Enter Amount\"\r\n                  className=\"form-control\"\r\n                  onChange={this.handleAmount.bind(this)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            {this.state.success ? (\r\n              <>\r\n                <Alert variant=\"success\">\r\n                  <p>Transaction Successfull.</p>\r\n                  <p>Transaction details recorded successfully. </p>\r\n                </Alert>\r\n              </>\r\n            ) : null}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {!this.state.success ? (\r\n              <>\r\n                <Button variant=\"danger\" onClick={isHide}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"warning\" onClick={this.transferMoney}>\r\n                  Tranfer Money\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button variant=\"warning\" onClick={this.handleReload}>\r\n                OK\r\n              </Button>\r\n            )}\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalView;\r\n"]},"metadata":{},"sourceType":"module"}